@using CinemaApp.Services.Data.Interfaces
@using CinemaApp.Web.Infrastructure.Extensions
@using CinemaApp.Web.ViewModels.Movie
@using static CinemaApp.Common.ErrorMessages.Watchlist

@model IEnumerable<AllMoviesIndexViewModel>
@inject IManagerService managerService

@if (TempData[nameof(AddToWatchListNotSuccessfullMessage)] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData[nameof(AddToWatchListNotSuccessfullMessage)]
    </div>
}

<h2>All Movies</h2>

<form method="get" asp-action="Index" class="mb-4">
    <div class="row">
        <div class="col">
            <input type="text"
                   name="searchQuery"
                   class="form-control"
                   placeholder="Search by title..."
                   value="@ViewData["SearchQuery"]" />
        </div>
        <div class="col">
            <input type="text"
                   name="genre"
                   class="form-control"
                   placeholder="Filter by genre..."
                   value="@ViewData["Genre"]" />
        </div>
        <div class="col">
            <input type="number"
                   name="releaseYear"
                   class="form-control"
                   placeholder="Filter by year..."
                   value="@ViewData["ReleaseYear"]" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Image</th>
            <th>Title</th>
            <th>Genre</th>
            <th>Release Date</th>
            <th>Duration</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (AllMoviesIndexViewModel movie in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(movie.ImageUrl))
                    {
                        <img src="@movie.ImageUrl" alt="@movie.Title" style="width: 100px; height: auto;" />
                    }
                    else
                    {
                        <span>No Image Available</span>
                    }
                </td>
                <td>@movie.Title</td>
                <td>@movie.Genre</td>
                <td>@movie.ReleaseDate</td>
                <td>@movie.Duration minutes</td>
                <td>
                    <a asp-action="Details" asp-route-id="@movie.Id" class="btn btn-info">Details</a>

                    @if (User?.Identity?.IsAuthenticated ?? false)
                    {
                        <form asp-controller="Watchlist" asp-action="AddToWatchlist" method="post" class="d-inline">
                            <input type="hidden" name="movieId" value="@movie.Id" />
                            <button type="submit" class="btn btn-warning">+Watchlist</button>
                        </form>

                        @if (await this.managerService.IsUserManagerAsync(this.User.GetUserId()))
                        {
                            <a asp-action="AddToProgram" asp-route-id="@movie.Id" class="btn btn-info">Add to Program</a>
                            <a asp-action="Edit" asp-route-id="@movie.Id" class="btn btn-primary">Edit</a>
                            <a asp-action="Delete" asp-route-id="@movie.Id" class="btn btn-danger">Delete</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (User?.Identity?.IsAuthenticated ?? false)
{
    @if (await this.managerService.IsUserManagerAsync(this.User.GetUserId()))
    {
        <a asp-action="Create" class="btn btn-primary">Add New Movie</a>
    }
}

<nav aria-label="Page navigation" class="mt-4">
    <ul class="pagination">
        @if ((int)ViewData["CurrentPage"] > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@( (int)ViewData["CurrentPage"] - 1 )"
                   asp-route-searchQuery="@ViewData["SearchQuery"]"
                   asp-route-genre="@ViewData["Genre"]"
                   asp-route-releaseYear="@ViewData["ReleaseYear"]">
                    Previous
                </a>
            </li>
        }

        @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
        {
            <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@i"
                   asp-route-searchQuery="@ViewData["SearchQuery"]"
                   asp-route-genre="@ViewData["Genre"]"
                   asp-route-releaseYear="@ViewData["ReleaseYear"]">
                    @i
                </a>
            </li>
        }

        @if ((int)ViewData["CurrentPage"] < (int)ViewData["TotalPages"])
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@( (int)ViewData["CurrentPage"] + 1 )"
                   asp-route-searchQuery="@ViewData["SearchQuery"]"
                   asp-route-genre="@ViewData["Genre"]"
                   asp-route-releaseYear="@ViewData["ReleaseYear"]">
                    Next
                </a>
            </li>
        }
    </ul>
</nav>

